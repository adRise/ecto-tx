
* 0.1.0

Initialize project.

* 0.1.1

Added:

- Tx.Macro

* 0.1.2

Fixed:

- Infinite loop when using Ecto.Multi

* 0.2.0

Changed:

- Handle nil as a Tx.t()
- Handle list of Tx.t() as a Tx.t()
- =rollback_on_error= function renamed into =enable_rollback_on_error= with clarified semantics
- =rollback_on_exception= function renamed into =disable_rollback_on_error= with clarified semantics

* 0.3.0

- Move the handling of single-branched `if`/`unless` inside bind syntax
  + Remove the handling of nil as pure(nil), because it breaks some Ecto functions that is expected to returns nil
- Remove the feature handling list of Tx.t as Tx.t
  + It was removed because it breaks Ecto functions that returns lists
  + You must now invoke Tx.concat/1 on a list of Tx.t(a) to get a Tx.t([a])

* 0.4.0

- Implement Tx.or_else/2 and Tx.new_error/1 to make Tx an instance of Alternative.
  + This allows users to write two Tx that are fallback to one another.
- Implement Tx.make_optional/1 to allow marking a Tx optional
- Explicitly state that {:ok, a} and {:error, error_t} is considered Tx.t(a).

* 0.4.1

- Wrap around tx returning expression with Tx.run
  + This allows users to return a transaction directly in last expression
  + The same wrap-around also applies to the result in the else block
